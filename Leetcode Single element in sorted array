class Solution {
public:
    int singleNonDuplicate(vector<int>& v) {
        int n = v.size();
        int start = 0; int end = n-1;
        while (start<=end) {
            int mid = (start+end)/2;
            if (n==1) return v[0];
            if (mid == 0) {
                if (v[mid]==v[mid+1]) start = mid+1;
                else return v[mid];
            }
            if (mid == n-1) {
                if (v[mid]==v[mid-1]) end = mid-1;
                else return v[mid];
            }
            if (v[mid-1] != v[mid] && v[mid+1] != v[mid]) return v[mid];
            if (mid%2==0) {
                if(v[mid]==v[mid+1]) start = mid+1;
                else end = mid-1;
            }
            else {
                if (v[mid]==v[mid-1]) start = mid+1;
                else end = mid-1; 
            }
        }
        return -1;
    }
};
